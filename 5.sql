-- Create DEPARTMENT first without MGRSSN to avoid circular dependency
CREATE TABLE DEPARTMENT (
    DNO VARCHAR(20) PRIMARY KEY,
    DNAME VARCHAR(20),
    MGRSTARTDATE DATE
);

-- Create EMPLOYEE
CREATE TABLE EMPLOYEE (
    SSN VARCHAR(20) PRIMARY KEY,
    FNAME VARCHAR(20),
    LNAME VARCHAR(20),
    ADDRESS VARCHAR(20),
    SEX CHAR(1),
    SALARY INTEGER,
    SUPERSSN VARCHAR(20),
    DNO VARCHAR(20),
    FOREIGN KEY (SUPERSSN) REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE,
    FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE
);

-- Add MGRSSN after EMPLOYEE is created
ALTER TABLE DEPARTMENT ADD MGRSSN VARCHAR(20);
ALTER TABLE DEPARTMENT ADD CONSTRAINT fk_mgrssn FOREIGN KEY (MGRSSN) REFERENCES EMPLOYEE(SSN);

-- Create remaining tables
CREATE TABLE DLOCATION (
    DLOC VARCHAR(20),
    DNO VARCHAR(20),
    FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE,
    PRIMARY KEY (DNO, DLOC)
);

CREATE TABLE PROJECT (
    PNO INTEGER PRIMARY KEY,
    PNAME VARCHAR(20),
    PLOCATION VARCHAR(20),
    DNO VARCHAR(20),
    FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNO) ON DELETE CASCADE
);

CREATE TABLE WORKS_ON (
    HOURS INT,
    SSN VARCHAR(20),
    PNO INT,
    FOREIGN KEY (SSN) REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE,
    FOREIGN KEY (PNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE,
    PRIMARY KEY (SSN, PNO)
);

-- Insert Sample Data
-- Insert departments first (without manager)
INSERT INTO DEPARTMENT (DNO, DNAME, MGRSTARTDATE) VALUES 
('1', 'ACCOUNTS', '2001-01-01'),
('2', 'IT', '2016-08-01'),
('3', 'ECE', '2008-06-01'),
('4', 'ISE', '2015-08-01'),
('5', 'CSE', '2002-06-01');

-- Insert employees
INSERT INTO EMPLOYEE VALUES 
('EMP001', 'JOHN', 'SCOTT', 'BANGALORE', 'M', 450000, NULL, '3'),
('EMP002', 'JAMES', 'SMITH', 'BANGALORE', 'M', 500000, NULL, '5');

-- Insert more employees
INSERT INTO EMPLOYEE VALUES
('EMP003', 'HEARN', 'BAKER', 'BANGALORE', 'M', 700000, 'EMP002', '5'),
('EMP004', 'EDWARD', 'SCOTT', 'MYSORE', 'M', 500000, 'EMP002', '5'),
('EMP005', 'PAVAN', 'HEGDE', 'MANGALORE', 'M', 650000, 'EMP002', '5'),
('EMP006', 'ALEX', 'MORGAN', 'BANGALORE', 'M', 620000, 'EMP002', '5'),
('EMP007', 'LISA', 'SCOTT', 'BANGALORE', 'F', 710000, 'EMP002', '5'),
('EMP008', 'EMMA', 'WATSON', 'MANGALORE', 'F', 680000, 'EMP003', '5'),
('EMP009', 'STEVE', 'JOBS', 'BANGALORE', 'M', 850000, 'EMP001', '1'),
('EMP010', 'MARK', 'ACCOUNTS', 'BANGALORE', 'M', 750000, 'EMP009', '1'),
('EMP011', 'SARA', 'TECH', 'BANGALORE', 'F', 680000, NULL, '2'),
('EMP012', 'MIKE', 'ENGINEER', 'BANGALORE', 'M', 620000, 'EMP011', '2'),
('EMP013', 'TOM', 'ISE', 'MANGALORE', 'M', 680000, NULL, '4');

-- Update department with manager SSN
UPDATE DEPARTMENT SET MGRSSN = 'EMP009' WHERE DNO = '1';
UPDATE DEPARTMENT SET MGRSSN = 'EMP011' WHERE DNO = '2';
UPDATE DEPARTMENT SET MGRSSN = 'EMP001' WHERE DNO = '3';
UPDATE DEPARTMENT SET MGRSSN = 'EMP013' WHERE DNO = '4';
UPDATE DEPARTMENT SET MGRSSN = 'EMP003' WHERE DNO = '5';

-- Insert locations
INSERT INTO DLOCATION VALUES 
('BANGALORE', '1'),
('BANGALORE', '2'),
('BANGALORE', '3'),
('MANGALORE', '4'),
('MANGALORE', '5'),
('MYSORE', '5');

-- Insert projects
INSERT INTO PROJECT VALUES 
(100, 'IOT', 'BANGALORE', '5'),
(101, 'CLOUD', 'BANGALORE', '5'),
(102, 'BIGDATA', 'BANGALORE', '5'),
(103, 'SENSORS', 'BANGALORE', '3'),
(104, 'BANK MANAGEMENT', 'BANGALORE', '1');

-- Insert works_on to ensure Q4 will have results (employees working on all CSE projects)
-- EMP007 works on all CSE projects
INSERT INTO WORKS_ON VALUES 
(4, 'EMP002', 100),
(6, 'EMP002', 101),
(8, 'EMP002', 102),
(10, 'EMP003', 100),
(3, 'EMP005', 100),
(5, 'EMP007', 100),
(7, 'EMP007', 101),
(9, 'EMP007', 102),
(11, 'EMP004', 100),
(12, 'EMP004', 103),
(8, 'EMP001', 103),
(6, 'EMP009', 104),
(7, 'EMP010', 104);

-- Queries
-- Q1: Find projects managed by or worked on by employees with last name 'SCOTT'
(SELECT DISTINCT P.PNO
 FROM PROJECT P
 JOIN DEPARTMENT D ON P.DNO = D.DNO
 JOIN EMPLOYEE E ON D.MGRSSN = E.SSN
 WHERE E.LNAME = 'SCOTT')
UNION
(SELECT DISTINCT P1.PNO
 FROM PROJECT P1
 JOIN WORKS_ON W ON P1.PNO = W.PNO
 JOIN EMPLOYEE E1 ON W.SSN = E1.SSN
 WHERE E1.LNAME = 'SCOTT');

-- Q2: Find employees working on 'IOT' project and increase their salary by 10%
SELECT E.FNAME, E.LNAME, 1.1 * E.SALARY AS INCR_SAL
FROM EMPLOYEE E
JOIN WORKS_ON W ON E.SSN = W.SSN
JOIN PROJECT P ON W.PNO = P.PNO
WHERE P.PNAME = 'IOT';

-- Q3: Calculate total, max, min, and average salary in 'ACCOUNTS' department
SELECT SUM(E.SALARY) AS TOTAL_SAL,
       MAX(E.SALARY) AS MAX_SAL,
       MIN(E.SALARY) AS MIN_SAL,
       AVG(E.SALARY) AS AVG_SAL
FROM EMPLOYEE E
JOIN DEPARTMENT D ON E.DNO = D.DNO
WHERE D.DNAME = 'ACCOUNTS';

-- Q4: Find employees who have worked on all projects of department 'CSE' (DNO = '5')
SELECT E.FNAME, E.LNAME
FROM EMPLOYEE E
WHERE NOT EXISTS (
    SELECT P.PNO
    FROM PROJECT P
    WHERE P.DNO = '5'
    AND P.PNO NOT IN (
        SELECT W.PNO
        FROM WORKS_ON W
        WHERE W.SSN = E.SSN
    )
);

-- Q5: Find departments where the average salary is above 650000
SELECT D.DNAME, AVG(E.SALARY) AS AVG_SALARY, COUNT(*) AS EMP_COUNT
FROM DEPARTMENT D
JOIN EMPLOYEE E ON D.DNO = E.DNO
GROUP BY D.DNAME
HAVING AVG(E.SALARY) > 650000;
